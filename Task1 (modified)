import spacy
from SPARQLWrapper import SPARQLWrapper, JSON

# Load the spaCy NLP model
nlp = spacy.load("en_core_web_sm")

# Named Entity Recognition Function
def extract_entities(text):
    doc = nlp(text)
    entities = [(ent.text, ent.label_) for ent in doc.ents]
    return entities

# Function to query Wikidata and get the Wikipedia link
def query_wikidata(entity):
    sparql = SPARQLWrapper("https://query.wikidata.org/sparql")
    query = f"""
    SELECT ?item ?itemLabel ?article WHERE {{
        SERVICE wikibase:label {{ bd:serviceParam wikibase:language "en". }}
        ?item ?label "{entity}"@en.
        OPTIONAL {{
            ?article schema:about ?item;
            schema:inLanguage "en";
            schema:isPartOf <https://en.wikipedia.org/>.
        }}
    }}
    LIMIT 1
    """
    sparql.setQuery(query)
    sparql.setReturnFormat(JSON)
    results = sparql.query().convert()

    for result in results["results"]["bindings"]:
        return result.get("article", {}).get("value")

# Main function to handle the entity extraction and linking
def entity_recognition_and_linking(text):
    entities = extract_entities(text)
    linked_entities = {}
    for entity, _ in entities:
        wikipedia_url = query_wikidata(entity)
        if wikipedia_url:
            linked_entities[entity] = wikipedia_url
    return linked_entities

# Example usage
text = "Apple Inc. is an American multinational technology company headquartered in Cupertino, California."
linked_entities = entity_recognition_and_linking(text)
print(linked_entities)
